@model EternalBAND.DomainObjects.Posts

@{
    ViewData["Title"] = "İlan Düzenle";
}
<link href="~/dropzone/dropzone.css" rel="stylesheet" type="text/css">
<link href="/Css/PostEdit.css" rel="stylesheet" type="text/css">
<div class="main-content">
    <div class="page-content">
        <section class="page-title-box">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-md-6">
                        <div class="text-center text-white">
                            <h3 class="mb-4">@ViewData["Title"]</h3>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <div class="position-relative" style="z-index: 1">
            <div class="shape">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 250">
                    <path fill="#FFFFFF" fill-opacity="1"
                          d="M0,192L120,202.7C240,213,480,235,720,234.7C960,235,1200,213,1320,202.7L1440,192L1440,320L1320,320C1200,320,960,320,720,320C480,320,240,320,120,320L0,320Z">
                    </path>
                </svg>
            </div>
        </div>
        <section class="section">
            <div class="container">
                <div class="row">
                    <div class="col-12 col-lg-12">
                        <div class="card p-3" id="typography">
                            <form asp-action="PostEdit" enctype="multipart/form-data" method="post" id="musicForm">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <input type="hidden" asp-for="Guid"/>
                                <div class="form-group m-3">
                                    <label asp-for="Title" class="control-label"></label>
                                    <input asp-for="Title" class="form-control"/>
                                    <span asp-validation-for="Title" class="text-danger"></span>
                                </div>
                                <div class="form-group m-3">
                                    <label asp-for="HTMLText" class="control-label"></label>
                                    <textarea asp-for="HTMLText" class="form-control" rows="3"></textarea>
                                    <span asp-validation-for="HTMLText" class="text-danger"></span>
                                </div>
                                <div class="form-group m-3">
                                    <label asp-for="PostTypesId" class="control-label"></label>
                                    <select asp-for="PostTypesId" class="form-control" asp-items="ViewBag.PostTypesId"></select>
                                    <span asp-validation-for="PostTypesId" class="text-danger"></span>
                                </div>  
                                <div class="form-group m-3">
                                    <label asp-for="InstrumentsId" class="control-label"></label>
                                    <select asp-for="InstrumentsId" class="form-control" asp-items="ViewBag.InstrumentsId"></select>
                                    <span asp-validation-for="InstrumentsId" class="text-danger"></span>
                                </div>    <div class="form-group m-3">
                                    <label asp-for="CityId" class="control-label"></label>
                                    <select asp-for="CityId" class="form-control" asp-items="ViewBag.CityId"></select>
                                    <span asp-validation-for="CityId" class="text-danger"></span>
                                </div>
                                <div class="form-group m-3">
                                    <label class="control-label">Fotoğraflar</label>
                                    <div id="image-upload" class="dropzone"></div>
                                </div>
                                <div class="form-group m-3">
                                    <input type="submit" value="Kaydet" class="btn btn-primary"/>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <partial name="PartialViews/_PostRules" />
    </div>
    <partial name="PartialViews/_SwitcherAndTopPartial"/>
</div>


<script src="~/dropzone/dropzone-min.js"></script>

<script>
    Dropzone.autoDiscover = false; // Disable auto-discovery to prevent conflicts

    let deletedFiles = []; // To store deleted file identifiers
    let uploadedFiles = []; // Stores files added in this session

    const preloadedFiles = [
        @{
            if (Model.Photo1 != null)
            {
                            @:{ id: 1, src: '@Model.Photo1' },
            }
            if (Model.Photo2 != null)
            {
                            @:{ id: 2, src: '@Model.Photo2' },
            }
            if (Model.Photo3 != null)
            {
                            @:{ id: 3, src: '@Model.Photo3' },
            }
            if (Model.Photo4 != null)
            {
                            @:{ id: 4, src: '@Model.Photo4' },
            }
            if (Model.Photo5 != null)
            {
                            @:{ id: 5, src: '@Model.Photo5' },
            }
        }
    ];

    // Initialize Dropzone
    const dropzone = new Dropzone("#image-upload", {
        url: "#", // Replace with your upload endpoint
        autoProcessQueue: false, // Prevent auto-upload
        maxFilesize: 2, // MB
        maxFiles: 5,
        addRemoveLinks: true,
        paramName: "images",
        init: function () {
            const dz = this;

            // Add preloaded files
            preloadedFiles.forEach(function (file) {
                const mockFile = { name: `Image ${file.id}`, size: 12345, serverId: file.id };
                dz.emit("addedfile", mockFile);
                dz.emit("thumbnail", mockFile, file.src);
                dz.emit("complete", mockFile);
                dz.files.push(mockFile);
            });

            // Handle file addition
            dz.on("addedfile", function (file) {
                if (!file.isMock) {
                    if (dz.files.length > this.options.maxFiles) {
                        this.removeFile(file);
                        alert("You can only upload up to 5 files.");
                    }
                    else {
                        uploadedFiles.push(file);
                    }
                }
            });

            // Handle file removal
            dz.on("removedfile", function (file) {
                if (file.serverId) {
                    deletedFiles.push(file.serverId);
                }
                // document.getElementById('deletedFiles').value = JSON.stringify(deletedFiles);
            });

            dz.on("maxfilesexceeded", function (file) {
                this.removeFile(file); // Remove the extra file
                alert("You can only upload up to 5 files.");
            });
        }
    });

    document.getElementById('musicForm').addEventListener('submit', function (e) {
        e.preventDefault();

        const formData = new FormData(this);

        // Append uploaded files
        uploadedFiles.forEach(file => {
            formData.append('uploadedFiles', file);
        });

        // Add deleted files as a separate parameter
        deletedFiles.forEach(index => {
            formData.append('deletedFilesIndex', index);
        });

        fetch('/ilan-duzenle', {
            method: 'POST',
            body: formData,
        })
             .then(response => {
                    if (response.ok) {
                        console.info('Changes saved successfully.');
                        window.location.href = "/ilanlarim";

                    } else {
                        console.info('Error saving changes.');
                    }
                })
                .catch(error => console.error('Error:', error));
    });



</script>